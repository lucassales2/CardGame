// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    ext.versions = [
            kotlin          : '1.3.30',
            androidGradle   : '3.4.0',
            koin            : '2.0.0-rc-3',
            room            : '2.1.0-alpha06',
            rxJava          : '2.2.8',
            rxKotlin        : '2.3.0',
            rxAndroid       : '2.1.1',
            lifecycle       : '2.1.0-alpha04',
            constraintLayout: '2.0.0-alpha2',
            coroutines      : '1.2.0',
            androidJunit    : '1.1.1-alpha04',
            contraintLayout : '2.0.0-alpha4',
            mockk           : '1.9.3',
            appcompat       : '1.1.0-alpha04'

    ]

    ext.buildConfig = [
            'compileSdk': 28,
            'minSdk'    : 23,
            'targetSdk' : 28,
    ]
    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath "com.android.tools.build:gradle:${versions.androidGradle}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}


plugins {
    id "com.diffplug.gradle.spotless" version "3.22.0"
    id 'com.github.ben-manes.versions' version "0.21.0"
}

allprojects {
    repositories {
        google()
        jcenter()

    }
}

subprojects {
    apply plugin: 'com.diffplug.gradle.spotless'
    spotless {
        kotlin {
            target "**/*.kt"
            ktlint("0.31.0")
        }
    }
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { selection ->
            boolean rejected = ['alpha' , 'cr', 'm', 'preview'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}